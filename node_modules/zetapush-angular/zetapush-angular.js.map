{"version":3,"file":"zetapush-angular.js","sources":["../out-tsc/lib/src/api.ts","../out-tsc/lib/src/core.ts","../out-tsc/lib/src/di.ts","../out-tsc/lib/src/zetapush.module.ts","../out-tsc/lib/zetapush-angular.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\n\nimport { services } from 'zetapush-js';\n\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/publish';\n\nimport { ZetaPushClient } from './core';\n\nconst /** @type {?} */ toPascalCase = (word = '') => `${word.charAt(0).toUpperCase()}${word.substring(1)}`;\n\nconst /** @type {?} */ getExtensionsAndListener = (Class: any, zone: NgZone) => {\n  const /** @type {?} */ filter = (element: string) => element !== 'constructor';\n  const /** @type {?} */ methods = Object.getOwnPropertyNames(Class.prototype).filter(filter);\n  const /** @type {?} */ extensions = {};\n  const /** @type {?} */ listener = methods.reduce((reducer, method) => {\n    const /** @type {?} */ source = new Observable((observer) => {\n      reducer[method] = ({ data }: { data: { errors: Array<any>, result: any } }) => {\n        console.log(`Api::on${toPascalCase(method)}`, data);\n        zone.run(() => {\n          const { errors, result } = data;\n          if (errors.length) {\n            observer.error(result);\n          } else {\n            observer.next(result);\n          }\n        });\n      };\n    });\n    const /** @type {?} */ published = source.publish();\n    extensions[`on${toPascalCase(method)}`] = published;\n    published.connect();\n    return reducer;\n  }, {});\n  return { extensions , listener };\n};\n\nexport interface ApiError {\n  code: string;\n  location: string;\n  message: string;\n}\nexport class Api extends services.Macro {\n/**\n * @return {?}\n */\n$getUserId(): string {\n    return '<abstract>';\n  }\n}\n/**\n * @param {?} client\n * @param {?} zone\n * @param {?} Api\n * @return {?}\n */\nexport function createApi(client: ZetaPushClient, zone: NgZone, Api: any) {\n  const { extensions , listener } = getExtensionsAndListener(Api, zone);\n  const /** @type {?} */ api = client.createAsyncMacroService({\n    Type: Api,\n    listener\n  });\n  const /** @type {?} */ $publish = api.$publish;\n  api.$publish = (method: string, parameters: any, hardFail?: boolean, debug?: number) => new Promise<any>((resolve, reject) => {\n    console.warn(`Api::${method}`, parameters);\n    const /** @type {?} */ onSuccess = (message: any) => zone.run(() => resolve(message));\n    const /** @type {?} */ onError = (errors: any) => zone.run(() => reject(errors));\n    $publish(method, parameters, hardFail, debug).then(onSuccess, onError);\n  });\n  return /** @type {?} */(( Object.assign(api, extensions, {\n    $getUserId: () => client.getUserId()\n  }) as Api));\n}\n","import { Authentication, SmartClient, ClientOptions } from 'zetapush-js';\n\nconst /** @type {?} */ ZETAPUSH_DELEGATING_TOKEN_KEY = 'ServicesAuthToken';\nexport class ZetaPushClient extends SmartClient {\n/**\n * @param {?} options\n */\nconstructor(options: ClientOptions) {\n    super(options);\n\n    const { authentication } = this.helper;\n    this.helper.authentication = () => {\n      const token = this.getDelegateToken();\n      if (token) {\n        return Authentication.delegating({ token });\n      } else {\n        return authentication();\n      }\n    };\n  }\n/**\n * @return {?}\n */\ngetDelegateToken() {\n    return localStorage.getItem(ZETAPUSH_DELEGATING_TOKEN_KEY);\n  }\n}\nexport class ZetaPushConnection {\n/**\n * @param {?} client\n */\nconstructor(\nprivate client: ZetaPushClient\n    ) {\n  }\n/**\n * @return {?}\n */\ndisconnect(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      const { client } = this;\n      const /** @type {?} */ handlers: Array<any> = [];\n      if (client.isConnected()) {\n        const /** @type {?} */ onConnectionClosed = () => {\n          console.log('ZetaPushConnection::onConnectionClosed');\n          // Remove connection status listener\n          handlers.forEach((handler) => {\n            client.removeConnectionStatusListener(handler);\n          });\n          // Resolve disconnection\n          resolve();\n        };\n        handlers.push(client.onConnectionClosed(onConnectionClosed));\n        // Disconnect client\n        client.disconnect();\n      } else {\n        // Resolve disconnection\n        resolve();\n      }\n    });\n  }\n/**\n * @param {?=} credentials\n * @return {?}\n */\nconnect(credentials: any = {}): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      const { client } = this;\n      const /** @type {?} */ handlers: Array<any> = [];\n      client.setCredentials(credentials);\n      this.disconnect().then(() => {\n        const /** @type {?} */ onFailedHandshake = (error: any) => {\n          console.log('ZetaPushConnection::onFailedHandshake', error);\n          // Remove connection status listener\n          handlers.forEach((handler) => {\n            client.removeConnectionStatusListener(handler);\n          });\n          // Reconnect client via weak auth\n          client.connect();\n          // Reject connection\n          reject();\n        };\n        const /** @type {?} */ onConnectionEstablished = () => {\n          console.log('ZetaPushConnection::onConnectionEstablished');\n          // Remove connection status listener\n          handlers.forEach((handler) => {\n            client.removeConnectionStatusListener(handler);\n          });\n          // Resolve connection success\n          resolve();\n        };\n        // Handle connection success and fail\n        handlers.push(client.onConnectionEstablished(onConnectionEstablished));\n        handlers.push(client.onFailedHandshake(onFailedHandshake));\n        // Connect client to ZetaPush backend\n        client.connect();\n      });\n    });\n  }\n}\n\nfunction ZetaPushConnection_tsickle_Closure_declarations() {\n/** @type {?} */\nZetaPushConnection.prototype.client;\n}\n\n","import { InjectionToken } from '@angular/core';\nimport { ClientOptions } from 'zetapush-js';\nimport { ZetaPushClient, ZetaPushConnection } from './core';\n\nexport const /** @type {?} */ ZetaPushClientConfig = new InjectionToken<ClientOptions>('ZetaPushClientConfig');\n/**\n * @param {?} config\n * @return {?}\n */\nexport function ZetaPushClientFactory(config: ClientOptions): ZetaPushClient {\n  return new ZetaPushClient(config);\n}\n/**\n * @param {?} client\n * @return {?}\n */\nexport function ZetaPushConnectionFactory(client: ZetaPushClient): ZetaPushConnection {\n  return new ZetaPushConnection(client);\n}\n","import { NgModule } from '@angular/core';\n\nimport { ZetaPushClient, ZetaPushConnection } from './core';\nimport { ZetaPushClientConfig, ZetaPushClientFactory, ZetaPushConnectionFactory } from './di';\nexport class ZetaPushModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: ZetaPushClient, useFactory: ZetaPushClientFactory, deps: [ ZetaPushClientConfig ] },\n    { provide: ZetaPushConnection, useFactory: ZetaPushConnectionFactory, deps: [ ZetaPushClient ] }\n  ],\n  bootstrap: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ZetaPushModule_tsickle_Closure_declarations() {\n/** @type {?} */\nZetaPushModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nZetaPushModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Api,ApiError,createApi,ZetaPushConnection,ZetaPushClient,ZetaPushClientConfig,ZetaPushModule} from './index';\n\nexport {ZetaPushClientFactory as ɵa,ZetaPushConnectionFactory as ɵb} from './src/di';"],"names":[],"mappings":"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"}